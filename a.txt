core.h:int sodium_init(void)
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_is_available(void);
crypto_aead_aes256gcm.h:size_t crypto_aead_aes256gcm_keybytes(void);
crypto_aead_aes256gcm.h:size_t crypto_aead_aes256gcm_nsecbytes(void);
crypto_aead_aes256gcm.h:size_t crypto_aead_aes256gcm_npubbytes(void);
crypto_aead_aes256gcm.h:size_t crypto_aead_aes256gcm_abytes(void);
crypto_aead_aes256gcm.h:typedef CRYPTO_ALIGN(16) unsigned char crypto_aead_aes256gcm_state[512];
crypto_aead_aes256gcm.h:size_t crypto_aead_aes256gcm_statebytes(void);
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_encrypt(unsigned char *c,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_decrypt(unsigned char *m,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,
crypto_aead_aes256gcm.h:int crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m,
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_ietf_keybytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_ietf_nsecbytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_ietf_npubbytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_ietf_abytes(void);
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_ietf_encrypt_detached(unsigned char *c,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char *m,
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_keybytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_nsecbytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_npubbytes(void);
crypto_aead_chacha20poly1305.h:size_t crypto_aead_chacha20poly1305_abytes(void);
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_encrypt(unsigned char *c,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_decrypt(unsigned char *m,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_encrypt_detached(unsigned char *c,
crypto_aead_chacha20poly1305.h:int crypto_aead_chacha20poly1305_decrypt_detached(unsigned char *m,
crypto_auth.h:size_t  crypto_auth_bytes(void);
crypto_auth.h:size_t  crypto_auth_keybytes(void);
crypto_auth.h:const char *crypto_auth_primitive(void);
crypto_auth.h:int crypto_auth(unsigned char *out, const unsigned char *in,
crypto_auth.h:int crypto_auth_verify(const unsigned char *h, const unsigned char *in,
crypto_auth_hmacsha256.h:size_t crypto_auth_hmacsha256_bytes(void);
crypto_auth_hmacsha256.h:size_t crypto_auth_hmacsha256_keybytes(void);
crypto_auth_hmacsha256.h:int crypto_auth_hmacsha256(unsigned char *out,
crypto_auth_hmacsha256.h:int crypto_auth_hmacsha256_verify(const unsigned char *h,
crypto_auth_hmacsha256.h:size_t crypto_auth_hmacsha256_statebytes(void);
crypto_auth_hmacsha256.h:int crypto_auth_hmacsha256_init(crypto_auth_hmacsha256_state *state,
crypto_auth_hmacsha256.h:int crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state *state,
crypto_auth_hmacsha256.h:int crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state *state,
crypto_auth_hmacsha512.h:size_t crypto_auth_hmacsha512_bytes(void);
crypto_auth_hmacsha512.h:size_t crypto_auth_hmacsha512_keybytes(void);
crypto_auth_hmacsha512.h:int crypto_auth_hmacsha512(unsigned char *out,
crypto_auth_hmacsha512.h:int crypto_auth_hmacsha512_verify(const unsigned char *h,
crypto_auth_hmacsha512.h:size_t crypto_auth_hmacsha512_statebytes(void);
crypto_auth_hmacsha512.h:int crypto_auth_hmacsha512_init(crypto_auth_hmacsha512_state *state,
crypto_auth_hmacsha512.h:int crypto_auth_hmacsha512_update(crypto_auth_hmacsha512_state *state,
crypto_auth_hmacsha512.h:int crypto_auth_hmacsha512_final(crypto_auth_hmacsha512_state *state,
crypto_auth_hmacsha512256.h:size_t crypto_auth_hmacsha512256_bytes(void);
crypto_auth_hmacsha512256.h:size_t crypto_auth_hmacsha512256_keybytes(void);
crypto_auth_hmacsha512256.h:int crypto_auth_hmacsha512256(unsigned char *out, const unsigned char *in,
crypto_auth_hmacsha512256.h:int crypto_auth_hmacsha512256_verify(const unsigned char *h,
crypto_auth_hmacsha512256.h:size_t crypto_auth_hmacsha512256_statebytes(void);
crypto_auth_hmacsha512256.h:int crypto_auth_hmacsha512256_init(crypto_auth_hmacsha512256_state *state,
crypto_auth_hmacsha512256.h:int crypto_auth_hmacsha512256_update(crypto_auth_hmacsha512256_state *state,
crypto_auth_hmacsha512256.h:int crypto_auth_hmacsha512256_final(crypto_auth_hmacsha512256_state *state,
crypto_box.h:size_t  crypto_box_seedbytes(void);
crypto_box.h:size_t  crypto_box_publickeybytes(void);
crypto_box.h:size_t  crypto_box_secretkeybytes(void);
crypto_box.h:size_t  crypto_box_noncebytes(void);
crypto_box.h:size_t  crypto_box_macbytes(void);
crypto_box.h:const char *crypto_box_primitive(void);
crypto_box.h:int crypto_box_seed_keypair(unsigned char *pk, unsigned char *sk,
crypto_box.h:int crypto_box_keypair(unsigned char *pk, unsigned char *sk);
crypto_box.h:int crypto_box_easy(unsigned char *c, const unsigned char *m,
crypto_box.h:int crypto_box_open_easy(unsigned char *m, const unsigned char *c,
crypto_box.h:int crypto_box_detached(unsigned char *c, unsigned char *mac,
crypto_box.h:int crypto_box_open_detached(unsigned char *m, const unsigned char *c,
crypto_box.h:size_t  crypto_box_beforenmbytes(void);
crypto_box.h:int crypto_box_beforenm(unsigned char *k, const unsigned char *pk,
crypto_box.h:int crypto_box_easy_afternm(unsigned char *c, const unsigned char *m,
crypto_box.h:int crypto_box_open_easy_afternm(unsigned char *m, const unsigned char *c,
crypto_box.h:int crypto_box_detached_afternm(unsigned char *c, unsigned char *mac,
crypto_box.h:int crypto_box_open_detached_afternm(unsigned char *m, const unsigned char *c,
crypto_box.h:size_t crypto_box_sealbytes(void);
crypto_box.h:int crypto_box_seal(unsigned char *c, const unsigned char *m,
crypto_box.h:int crypto_box_seal_open(unsigned char *m, const unsigned char *c,
crypto_box.h:size_t  crypto_box_zerobytes(void);
crypto_box.h:size_t  crypto_box_boxzerobytes(void);
crypto_box.h:int crypto_box(unsigned char *c, const unsigned char *m,
crypto_box.h:int crypto_box_open(unsigned char *m, const unsigned char *c,
crypto_box.h:int crypto_box_afternm(unsigned char *c, const unsigned char *m,
crypto_box.h:int crypto_box_open_afternm(unsigned char *m, const unsigned char *c,
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_seedbytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_publickeybytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_secretkeybytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_beforenmbytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_noncebytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_macbytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_boxzerobytes(void);
crypto_box_curve25519xsalsa20poly1305.h:size_t crypto_box_curve25519xsalsa20poly1305_zerobytes(void);
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305(unsigned char *c,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_open(unsigned char *m,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_seed_keypair(unsigned char *pk,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_keypair(unsigned char *pk,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_beforenm(unsigned char *k,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_afternm(unsigned char *c,
crypto_box_curve25519xsalsa20poly1305.h:int crypto_box_curve25519xsalsa20poly1305_open_afternm(unsigned char *m,
crypto_core_hchacha20.h:size_t crypto_core_hchacha20_outputbytes(void);
crypto_core_hchacha20.h:size_t crypto_core_hchacha20_inputbytes(void);
crypto_core_hchacha20.h:size_t crypto_core_hchacha20_keybytes(void);
crypto_core_hchacha20.h:size_t crypto_core_hchacha20_constbytes(void);
crypto_core_hchacha20.h:int crypto_core_hchacha20(unsigned char *out, const unsigned char *in,
crypto_core_hsalsa20.h:size_t crypto_core_hsalsa20_outputbytes(void);
crypto_core_hsalsa20.h:size_t crypto_core_hsalsa20_inputbytes(void);
crypto_core_hsalsa20.h:size_t crypto_core_hsalsa20_keybytes(void);
crypto_core_hsalsa20.h:size_t crypto_core_hsalsa20_constbytes(void);
crypto_core_hsalsa20.h:int crypto_core_hsalsa20(unsigned char *out, const unsigned char *in,
crypto_core_salsa20.h:size_t crypto_core_salsa20_outputbytes(void);
crypto_core_salsa20.h:size_t crypto_core_salsa20_inputbytes(void);
crypto_core_salsa20.h:size_t crypto_core_salsa20_keybytes(void);
crypto_core_salsa20.h:size_t crypto_core_salsa20_constbytes(void);
crypto_core_salsa20.h:int crypto_core_salsa20(unsigned char *out, const unsigned char *in,
crypto_core_salsa2012.h:size_t crypto_core_salsa2012_outputbytes(void);
crypto_core_salsa2012.h:size_t crypto_core_salsa2012_inputbytes(void);
crypto_core_salsa2012.h:size_t crypto_core_salsa2012_keybytes(void);
crypto_core_salsa2012.h:size_t crypto_core_salsa2012_constbytes(void);
crypto_core_salsa2012.h:int crypto_core_salsa2012(unsigned char *out, const unsigned char *in,
crypto_core_salsa208.h:size_t crypto_core_salsa208_outputbytes(void);
crypto_core_salsa208.h:size_t crypto_core_salsa208_inputbytes(void);
crypto_core_salsa208.h:size_t crypto_core_salsa208_keybytes(void);
crypto_core_salsa208.h:size_t crypto_core_salsa208_constbytes(void);
crypto_core_salsa208.h:int crypto_core_salsa208(unsigned char *out, const unsigned char *in,
crypto_generichash.h:size_t  crypto_generichash_bytes_min(void);
crypto_generichash.h:size_t  crypto_generichash_bytes_max(void);
crypto_generichash.h:size_t  crypto_generichash_bytes(void);
crypto_generichash.h:size_t  crypto_generichash_keybytes_min(void);
crypto_generichash.h:size_t  crypto_generichash_keybytes_max(void);
crypto_generichash.h:size_t  crypto_generichash_keybytes(void);
crypto_generichash.h:const char *crypto_generichash_primitive(void);
crypto_generichash.h:size_t  crypto_generichash_statebytes(void);
crypto_generichash.h:int crypto_generichash(unsigned char *out, size_t outlen,
crypto_generichash.h:int crypto_generichash_init(crypto_generichash_state *state,
crypto_generichash.h:int crypto_generichash_update(crypto_generichash_state *state,
crypto_generichash.h:int crypto_generichash_final(crypto_generichash_state *state,
crypto_generichash_blake2b.h:typedef CRYPTO_ALIGN(64) struct crypto_generichash_blake2b_state {
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_bytes_min(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_bytes_max(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_bytes(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_keybytes_min(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_keybytes_max(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_keybytes(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_saltbytes(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_personalbytes(void);
crypto_generichash_blake2b.h:size_t crypto_generichash_blake2b_statebytes(void);
crypto_generichash_blake2b.h:int crypto_generichash_blake2b(unsigned char *out, size_t outlen,
crypto_generichash_blake2b.h:int crypto_generichash_blake2b_salt_personal(unsigned char *out, size_t outlen,
crypto_generichash_blake2b.h:int crypto_generichash_blake2b_init(crypto_generichash_blake2b_state *state,
crypto_generichash_blake2b.h:int crypto_generichash_blake2b_init_salt_personal(crypto_generichash_blake2b_state *state,
crypto_generichash_blake2b.h:int crypto_generichash_blake2b_update(crypto_generichash_blake2b_state *state,
crypto_generichash_blake2b.h:int crypto_generichash_blake2b_final(crypto_generichash_blake2b_state *state,
crypto_generichash_blake2b.h:int _crypto_generichash_blake2b_pick_best_implementation(void);
crypto_hash.h:size_t crypto_hash_bytes(void);
crypto_hash.h:int crypto_hash(unsigned char *out, const unsigned char *in,
crypto_hash.h:const char *crypto_hash_primitive(void)
crypto_hash_sha256.h:size_t crypto_hash_sha256_statebytes(void);
crypto_hash_sha256.h:size_t crypto_hash_sha256_bytes(void);
crypto_hash_sha256.h:int crypto_hash_sha256(unsigned char *out, const unsigned char *in,
crypto_hash_sha256.h:int crypto_hash_sha256_init(crypto_hash_sha256_state *state);
crypto_hash_sha256.h:int crypto_hash_sha256_update(crypto_hash_sha256_state *state,
crypto_hash_sha256.h:int crypto_hash_sha256_final(crypto_hash_sha256_state *state,
crypto_hash_sha512.h:size_t crypto_hash_sha512_statebytes(void);
crypto_hash_sha512.h:size_t crypto_hash_sha512_bytes(void);
crypto_hash_sha512.h:int crypto_hash_sha512(unsigned char *out, const unsigned char *in,
crypto_hash_sha512.h:int crypto_hash_sha512_init(crypto_hash_sha512_state *state);
crypto_hash_sha512.h:int crypto_hash_sha512_update(crypto_hash_sha512_state *state,
crypto_hash_sha512.h:int crypto_hash_sha512_final(crypto_hash_sha512_state *state,
crypto_onetimeauth.h:size_t  crypto_onetimeauth_statebytes(void);
crypto_onetimeauth.h:size_t  crypto_onetimeauth_bytes(void);
crypto_onetimeauth.h:size_t  crypto_onetimeauth_keybytes(void);
crypto_onetimeauth.h:const char *crypto_onetimeauth_primitive(void);
crypto_onetimeauth.h:int crypto_onetimeauth(unsigned char *out, const unsigned char *in,
crypto_onetimeauth.h:int crypto_onetimeauth_verify(const unsigned char *h, const unsigned char *in,
crypto_onetimeauth.h:int crypto_onetimeauth_init(crypto_onetimeauth_state *state,
crypto_onetimeauth.h:int crypto_onetimeauth_update(crypto_onetimeauth_state *state,
crypto_onetimeauth.h:int crypto_onetimeauth_final(crypto_onetimeauth_state *state,
crypto_onetimeauth_poly1305.h:typedef CRYPTO_ALIGN(16) struct crypto_onetimeauth_poly1305_state {
crypto_onetimeauth_poly1305.h:size_t crypto_onetimeauth_poly1305_bytes(void);
crypto_onetimeauth_poly1305.h:size_t crypto_onetimeauth_poly1305_keybytes(void);
crypto_onetimeauth_poly1305.h:int crypto_onetimeauth_poly1305(unsigned char *out,
crypto_onetimeauth_poly1305.h:int crypto_onetimeauth_poly1305_verify(const unsigned char *h,
crypto_onetimeauth_poly1305.h:int crypto_onetimeauth_poly1305_init(crypto_onetimeauth_poly1305_state *state,
crypto_onetimeauth_poly1305.h:int crypto_onetimeauth_poly1305_update(crypto_onetimeauth_poly1305_state *state,
crypto_onetimeauth_poly1305.h:int crypto_onetimeauth_poly1305_final(crypto_onetimeauth_poly1305_state *state,
crypto_onetimeauth_poly1305.h:int _crypto_onetimeauth_poly1305_pick_best_implementation(void);
crypto_pwhash.h:int crypto_pwhash_alg_argon2i13(void);
crypto_pwhash.h:int crypto_pwhash_alg_default(void);
crypto_pwhash.h:size_t crypto_pwhash_saltbytes(void);
crypto_pwhash.h:size_t crypto_pwhash_strbytes(void);
crypto_pwhash.h:const char *crypto_pwhash_strprefix(void);
crypto_pwhash.h:size_t crypto_pwhash_opslimit_interactive(void);
crypto_pwhash.h:size_t crypto_pwhash_memlimit_interactive(void);
crypto_pwhash.h:size_t crypto_pwhash_opslimit_moderate(void);
crypto_pwhash.h:size_t crypto_pwhash_memlimit_moderate(void);
crypto_pwhash.h:size_t crypto_pwhash_opslimit_sensitive(void);
crypto_pwhash.h:size_t crypto_pwhash_memlimit_sensitive(void);
crypto_pwhash.h:int crypto_pwhash(unsigned char * const out, unsigned long long outlen,
crypto_pwhash.h:int crypto_pwhash_str(char out[crypto_pwhash_STRBYTES],
crypto_pwhash.h:int crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],
crypto_pwhash.h:const char *crypto_pwhash_primitive(void)
crypto_pwhash_argon2i.h:int crypto_pwhash_argon2i_alg_argon2i13(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_saltbytes(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_strbytes(void);
crypto_pwhash_argon2i.h:const char *crypto_pwhash_argon2i_strprefix(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_opslimit_interactive(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_memlimit_interactive(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_opslimit_moderate(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_memlimit_moderate(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_opslimit_sensitive(void);
crypto_pwhash_argon2i.h:size_t crypto_pwhash_argon2i_memlimit_sensitive(void);
crypto_pwhash_argon2i.h:int crypto_pwhash_argon2i(unsigned char * const out,
crypto_pwhash_argon2i.h:int crypto_pwhash_argon2i_str(char out[crypto_pwhash_argon2i_STRBYTES],
crypto_pwhash_argon2i.h:int crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],
crypto_pwhash_argon2i.h:int _crypto_pwhash_argon2i_pick_best_implementation(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_saltbytes(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_strbytes(void);
crypto_pwhash_scryptsalsa208sha256.h:const char *crypto_pwhash_scryptsalsa208sha256_strprefix(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_opslimit_interactive(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_memlimit_interactive(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive(void);
crypto_pwhash_scryptsalsa208sha256.h:size_t crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive(void);
crypto_pwhash_scryptsalsa208sha256.h:int crypto_pwhash_scryptsalsa208sha256(unsigned char * const out,
crypto_pwhash_scryptsalsa208sha256.h:int crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
crypto_pwhash_scryptsalsa208sha256.h:int crypto_pwhash_scryptsalsa208sha256_str_verify(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
crypto_pwhash_scryptsalsa208sha256.h:int crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t * passwd, size_t passwdlen,
crypto_scalarmult.h:size_t  crypto_scalarmult_bytes(void);
crypto_scalarmult.h:size_t  crypto_scalarmult_scalarbytes(void);
crypto_scalarmult.h:const char *crypto_scalarmult_primitive(void);
crypto_scalarmult.h:int crypto_scalarmult_base(unsigned char *q, const unsigned char *n);
crypto_scalarmult.h:int crypto_scalarmult(unsigned char *q, const unsigned char *n,
crypto_scalarmult_curve25519.h:size_t crypto_scalarmult_curve25519_bytes(void);
crypto_scalarmult_curve25519.h:size_t crypto_scalarmult_curve25519_scalarbytes(void);
crypto_scalarmult_curve25519.h:int crypto_scalarmult_curve25519(unsigned char *q, const unsigned char *n,
crypto_scalarmult_curve25519.h:int crypto_scalarmult_curve25519_base(unsigned char *q, const unsigned char *n);
crypto_scalarmult_curve25519.h:int _crypto_scalarmult_curve25519_pick_best_implementation(void);
crypto_secretbox.h:size_t  crypto_secretbox_keybytes(void);
crypto_secretbox.h:size_t  crypto_secretbox_noncebytes(void);
crypto_secretbox.h:size_t  crypto_secretbox_macbytes(void);
crypto_secretbox.h:const char *crypto_secretbox_primitive(void);
crypto_secretbox.h:int crypto_secretbox_easy(unsigned char *c, const unsigned char *m,
crypto_secretbox.h:int crypto_secretbox_open_easy(unsigned char *m, const unsigned char *c,
crypto_secretbox.h:int crypto_secretbox_detached(unsigned char *c, unsigned char *mac,
crypto_secretbox.h:int crypto_secretbox_open_detached(unsigned char *m,
crypto_secretbox.h:size_t  crypto_secretbox_zerobytes(void);
crypto_secretbox.h:size_t  crypto_secretbox_boxzerobytes(void);
crypto_secretbox.h:int crypto_secretbox(unsigned char *c, const unsigned char *m,
crypto_secretbox.h:int crypto_secretbox_open(unsigned char *m, const unsigned char *c,
crypto_secretbox_xsalsa20poly1305.h:size_t crypto_secretbox_xsalsa20poly1305_keybytes(void);
crypto_secretbox_xsalsa20poly1305.h:size_t crypto_secretbox_xsalsa20poly1305_noncebytes(void);
crypto_secretbox_xsalsa20poly1305.h:size_t crypto_secretbox_xsalsa20poly1305_macbytes(void);
crypto_secretbox_xsalsa20poly1305.h:size_t crypto_secretbox_xsalsa20poly1305_boxzerobytes(void);
crypto_secretbox_xsalsa20poly1305.h:size_t crypto_secretbox_xsalsa20poly1305_zerobytes(void);
crypto_secretbox_xsalsa20poly1305.h:int crypto_secretbox_xsalsa20poly1305(unsigned char *c,
crypto_secretbox_xsalsa20poly1305.h:int crypto_secretbox_xsalsa20poly1305_open(unsigned char *m,
crypto_shorthash.h:size_t  crypto_shorthash_bytes(void);
crypto_shorthash.h:size_t  crypto_shorthash_keybytes(void);
crypto_shorthash.h:const char *crypto_shorthash_primitive(void);
crypto_shorthash.h:int crypto_shorthash(unsigned char *out, const unsigned char *in,
crypto_shorthash_siphash24.h:size_t crypto_shorthash_siphash24_bytes(void);
crypto_shorthash_siphash24.h:size_t crypto_shorthash_siphash24_keybytes(void);
crypto_shorthash_siphash24.h:int crypto_shorthash_siphash24(unsigned char *out, const unsigned char *in,
crypto_sign.h:size_t  crypto_sign_bytes(void);
crypto_sign.h:size_t  crypto_sign_seedbytes(void);
crypto_sign.h:size_t  crypto_sign_publickeybytes(void);
crypto_sign.h:size_t  crypto_sign_secretkeybytes(void);
crypto_sign.h:const char *crypto_sign_primitive(void);
crypto_sign.h:int crypto_sign_seed_keypair(unsigned char *pk, unsigned char *sk,
crypto_sign.h:int crypto_sign_keypair(unsigned char *pk, unsigned char *sk);
crypto_sign.h:int crypto_sign(unsigned char *sm, unsigned long long *smlen_p,
crypto_sign.h:int crypto_sign_open(unsigned char *m, unsigned long long *mlen_p,
crypto_sign.h:int crypto_sign_detached(unsigned char *sig, unsigned long long *siglen_p,
crypto_sign.h:int crypto_sign_verify_detached(const unsigned char *sig,
crypto_sign_ed25519.h:size_t crypto_sign_ed25519_bytes(void);
crypto_sign_ed25519.h:size_t crypto_sign_ed25519_seedbytes(void);
crypto_sign_ed25519.h:size_t crypto_sign_ed25519_publickeybytes(void);
crypto_sign_ed25519.h:size_t crypto_sign_ed25519_secretkeybytes(void);
crypto_sign_ed25519.h:int crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,
crypto_sign_ed25519.h:int crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,
crypto_sign_ed25519.h:int crypto_sign_ed25519_detached(unsigned char *sig,
crypto_sign_ed25519.h:int crypto_sign_ed25519_verify_detached(const unsigned char *sig,
crypto_sign_ed25519.h:int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk);
crypto_sign_ed25519.h:int crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,
crypto_sign_ed25519.h:int crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,
crypto_sign_ed25519.h:int crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,
crypto_sign_ed25519.h:int crypto_sign_ed25519_sk_to_seed(unsigned char *seed,
crypto_sign_ed25519.h:int crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk);
crypto_sign_edwards25519sha512batch.h:int crypto_sign_edwards25519sha512batch(unsigned char *sm,
crypto_sign_edwards25519sha512batch.h:int crypto_sign_edwards25519sha512batch_open(unsigned char *m,
crypto_sign_edwards25519sha512batch.h:int crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,
crypto_stream.h:size_t  crypto_stream_keybytes(void);
crypto_stream.h:size_t  crypto_stream_noncebytes(void);
crypto_stream.h:const char *crypto_stream_primitive(void);
crypto_stream.h:int crypto_stream(unsigned char *c, unsigned long long clen,
crypto_stream.h:int crypto_stream_xor(unsigned char *c, const unsigned char *m,
crypto_stream_aes128ctr.h:size_t crypto_stream_aes128ctr_keybytes(void);
crypto_stream_aes128ctr.h:size_t crypto_stream_aes128ctr_noncebytes(void);
crypto_stream_aes128ctr.h:size_t crypto_stream_aes128ctr_beforenmbytes(void);
crypto_stream_aes128ctr.h:int crypto_stream_aes128ctr(unsigned char *out, unsigned long long outlen,
crypto_stream_aes128ctr.h:int crypto_stream_aes128ctr_xor(unsigned char *out, const unsigned char *in,
crypto_stream_aes128ctr.h:int crypto_stream_aes128ctr_beforenm(unsigned char *c, const unsigned char *k);
crypto_stream_aes128ctr.h:int crypto_stream_aes128ctr_afternm(unsigned char *out, unsigned long long len,
crypto_stream_aes128ctr.h:int crypto_stream_aes128ctr_xor_afternm(unsigned char *out, const unsigned char *in,
crypto_stream_chacha20.h:size_t crypto_stream_chacha20_keybytes(void);
crypto_stream_chacha20.h:size_t crypto_stream_chacha20_noncebytes(void);
crypto_stream_chacha20.h:int crypto_stream_chacha20(unsigned char *c, unsigned long long clen,
crypto_stream_chacha20.h:int crypto_stream_chacha20_xor(unsigned char *c, const unsigned char *m,
crypto_stream_chacha20.h:int crypto_stream_chacha20_xor_ic(unsigned char *c, const unsigned char *m,
crypto_stream_chacha20.h:size_t crypto_stream_chacha20_ietf_noncebytes(void);
crypto_stream_chacha20.h:int crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,
crypto_stream_chacha20.h:int crypto_stream_chacha20_ietf_xor(unsigned char *c, const unsigned char *m,
crypto_stream_chacha20.h:int crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,
crypto_stream_chacha20.h:int _crypto_stream_chacha20_pick_best_implementation(void);
crypto_stream_salsa20.h:size_t crypto_stream_salsa20_keybytes(void);
crypto_stream_salsa20.h:size_t crypto_stream_salsa20_noncebytes(void);
crypto_stream_salsa20.h:int crypto_stream_salsa20(unsigned char *c, unsigned long long clen,
crypto_stream_salsa20.h:int crypto_stream_salsa20_xor(unsigned char *c, const unsigned char *m,
crypto_stream_salsa20.h:int crypto_stream_salsa20_xor_ic(unsigned char *c, const unsigned char *m,
crypto_stream_salsa2012.h:size_t crypto_stream_salsa2012_keybytes(void);
crypto_stream_salsa2012.h:size_t crypto_stream_salsa2012_noncebytes(void);
crypto_stream_salsa2012.h:int crypto_stream_salsa2012(unsigned char *c, unsigned long long clen,
crypto_stream_salsa2012.h:int crypto_stream_salsa2012_xor(unsigned char *c, const unsigned char *m,
crypto_stream_salsa208.h:size_t crypto_stream_salsa208_keybytes(void);
crypto_stream_salsa208.h:size_t crypto_stream_salsa208_noncebytes(void);
crypto_stream_salsa208.h:int crypto_stream_salsa208(unsigned char *c, unsigned long long clen,
crypto_stream_salsa208.h:int crypto_stream_salsa208_xor(unsigned char *c, const unsigned char *m,
crypto_stream_xchacha20.h:size_t crypto_stream_xchacha20_keybytes(void);
crypto_stream_xchacha20.h:size_t crypto_stream_xchacha20_noncebytes(void);
crypto_stream_xchacha20.h:int crypto_stream_xchacha20(unsigned char *c, unsigned long long clen,
crypto_stream_xchacha20.h:int crypto_stream_xchacha20_xor(unsigned char *c, const unsigned char *m,
crypto_stream_xchacha20.h:int crypto_stream_xchacha20_xor_ic(unsigned char *c, const unsigned char *m,
crypto_stream_xsalsa20.h:size_t crypto_stream_xsalsa20_keybytes(void);
crypto_stream_xsalsa20.h:size_t crypto_stream_xsalsa20_noncebytes(void);
crypto_stream_xsalsa20.h:int crypto_stream_xsalsa20(unsigned char *c, unsigned long long clen,
crypto_stream_xsalsa20.h:int crypto_stream_xsalsa20_xor(unsigned char *c, const unsigned char *m,
crypto_stream_xsalsa20.h:int crypto_stream_xsalsa20_xor_ic(unsigned char *c, const unsigned char *m,
crypto_verify_16.h:size_t crypto_verify_16_bytes(void);
crypto_verify_16.h:int crypto_verify_16(const unsigned char *x, const unsigned char *y)
crypto_verify_32.h:size_t crypto_verify_32_bytes(void);
crypto_verify_32.h:int crypto_verify_32(const unsigned char *x, const unsigned char *y)
crypto_verify_64.h:size_t crypto_verify_64_bytes(void);
crypto_verify_64.h:int crypto_verify_64(const unsigned char *x, const unsigned char *y)
randombytes.h:void randombytes_buf(void * const buf, const size_t size);
randombytes.h:uint32_t randombytes_random(void);
randombytes.h:uint32_t randombytes_uniform(const uint32_t upper_bound);
randombytes.h:void randombytes_stir(void);
randombytes.h:int randombytes_close(void);
randombytes.h:int randombytes_set_implementation(randombytes_implementation *impl);
randombytes.h:const char *randombytes_implementation_name(void);
randombytes.h:void randombytes(unsigned char * const buf, const unsigned long long buf_len);
runtime.h:int sodium_runtime_has_neon(void);
runtime.h:int sodium_runtime_has_sse2(void);
runtime.h:int sodium_runtime_has_sse3(void);
runtime.h:int sodium_runtime_has_ssse3(void);
runtime.h:int sodium_runtime_has_sse41(void);
runtime.h:int sodium_runtime_has_avx(void);
runtime.h:int sodium_runtime_has_avx2(void);
runtime.h:int sodium_runtime_has_pclmul(void);
runtime.h:int sodium_runtime_has_aesni(void);
runtime.h:int _sodium_runtime_get_cpu_features(void);
utils.h:void sodium_memzero(void * const pnt, const size_t len);
utils.h:int sodium_memcmp(const void * const b1_, const void * const b2_, size_t len)
utils.h:int sodium_compare(const unsigned char *b1_, const unsigned char *b2_,
utils.h:int sodium_is_zero(const unsigned char *n, const size_t nlen);
utils.h:void sodium_increment(unsigned char *n, const size_t nlen);
utils.h:void sodium_add(unsigned char *a, const unsigned char *b, const size_t len);
utils.h:char *sodium_bin2hex(char * const hex, const size_t hex_maxlen,
utils.h:int sodium_hex2bin(unsigned char * const bin, const size_t bin_maxlen,
utils.h:int sodium_mlock(void * const addr, const size_t len);
utils.h:int sodium_munlock(void * const addr, const size_t len);
utils.h:void *sodium_malloc(const size_t size)
utils.h:void *sodium_allocarray(size_t count, size_t size)
utils.h:void sodium_free(void *ptr);
utils.h:int sodium_mprotect_noaccess(void *ptr);
utils.h:int sodium_mprotect_readonly(void *ptr);
utils.h:int sodium_mprotect_readwrite(void *ptr);
utils.h:int _sodium_alloc_init(void);
